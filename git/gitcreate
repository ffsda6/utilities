#!/bin/bash

# GitHub username and token (replace with your values)
GITHUB_USERNAME="your_github_username"  # Replace with your GitHub username
GITHUB_TOKEN="your_personal_access_token" # Replace with your GitHub token

# Validation for GITHUB_USERNAME and GITHUB_TOKEN
if [ -z "$GITHUB_USERNAME" ]; then
    echo "Error: GITHUB_USERNAME is not set. Please provide your GitHub username."
    exit 1
fi

if [ -z "$GITHUB_TOKEN" ]; then
    echo "Error: GITHUB_TOKEN is not set. Please provide your GitHub personal access token."
    exit 1
fi

# Check if project_name is provided as an argument
if [ -z "$1" ]; then
    echo "Error: Project name not provided. Usage: $0 <project_name>"
    exit 1
fi

# Use the provided project_name
project_name="$1"

# Create a local directory for the project
mkdir "$project_name" || { echo "Failed to create directory"; exit 1; }
cd "$project_name" || { echo "Failed to change to directory"; exit 1; }

# Create a README.md file
echo "# $project_name" > README.md
echo "## Description" >> README.md
echo "A brief description of the project." >> README.md

# Initialize Git repository
git init

# Create a remote GitHub repository (private)
REPO_JSON=$(curl -s -u "$GITHUB_USERNAME:$GITHUB_TOKEN" https://api.github.com/user/repos -d "{\"name\": \"$project_name\", \"private\": true}")

# Check if repository was created successfully
if echo "$REPO_JSON" | jq -e '.name? == null'; then
    echo "Error creating remote repository on GitHub: $(echo "$REPO_JSON" | jq '.message')"
    exit 1
fi

# Get the repository URL
REPO_URL=$(echo "$REPO_JSON" | jq -r .ssh_url)

# Add the GitHub repository as a remote
git remote add origin "$REPO_URL"

# Stage and commit the README.md file
git add README.md
git commit -m "Initial commit with README"

# Push to the remote repository
git push -u origin main || { echo "Error pushing to remote repository"; exit 1; }

echo "Project $project_name created successfully with a private GitHub repository."
